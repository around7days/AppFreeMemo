// doma-gen用構成定義
configurations {
    domaGenRuntime
}

// 外部依存関係の定義
dependencies {
    // doma-gen用
    domaGenRuntime group: 'org.seasar.doma', name: 'doma-gen', version: '+'
    domaGenRuntime group: 'mysql', name: 'mysql-connector-java'
}


/*
 * タスク共通定義
 */
def genUrl                       = 'jdbc:mysql://localhost:3306/mmsdb'
def genUser                      = 'mms01'
def genPassword                  = 'mms01'
def genVersionColumnNamePattern  = 'version'
def entityPackageName            = 'rms.common.entity'
def daoPackageName               = 'rms.common.dao'


/**
 * テーブル共通ソースコード自動生成
 */
task domaGenByTable << {
    // gen
    def genTableTypes                = 'TABLE'
    def genTemplatePrimaryDir        = 'doma-gen'
    // entity
    def entityOverwrite          = true
    def entityOverwriteListener  = true
    def entityUseAccessor        = true
    def entityUseListener        = true
    // dao
    def daoOverwrite             = true
    // sql
    def SqlOverwrite             = true

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: genUrl,
            user: genUser,
            password: genPassword,
            tableTypes: genTableTypes,
            templatePrimaryDir: genTemplatePrimaryDir,
            versionColumnNamePattern: genVersionColumnNamePattern) {
        entityConfig(packageName: entityPackageName,
                     overwrite: entityOverwrite,
                     overwriteListener: entityOverwriteListener,
                     useListener: entityUseListener,
                     useAccessor: entityUseAccessor)
        daoConfig(packageName: daoPackageName, overwrite: daoOverwrite)
        sqlConfig(overwrite: SqlOverwrite)
    }
}

/**
 * ビュー共通ソースコード自動生成
 */
task domaGenByView << {
    // gen
    def genTableTypes            = 'VIEW'
    def genTemplatePrimaryDir    = 'doma-gen/view'
    // entity
    def entityOverwrite          = true
    def entityUseAccessor        = true
    def entityUseListener        = false
    // dao
    def daoOverwrite             = false

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: genUrl,
            user: genUser,
            password: genPassword,
            tableTypes: genTableTypes,
            templatePrimaryDir: genTemplatePrimaryDir,
            versionColumnNamePattern: genVersionColumnNamePattern) {
        entityConfig(packageName: entityPackageName,
                     overwrite: entityOverwrite,
                     useListener: entityUseListener,
                     useAccessor: entityUseAccessor)
        daoConfig(packageName: daoPackageName, overwrite: daoOverwrite)
    }
}


/*
 * 個別ソースコード自動生成
 */
task domaGenEntity << {
    def orignalEntityPackageName = 'example'
    def entityEntityName  = 'Example'
    def entityOverwrite   = true
    def entityUseAccessor = true
    def entitySql         =
'''
select
    'X'
from
    dual
'''

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: genUrl,
            user: genUser,
            password: genPassword,
            tableTypes: genTableTypes,
            templatePrimaryDir: genTemplatePrimaryDir) {
        entityConfig(packageName: orignalEntityPackageName,
                     entityName: entityEntityName,
                     overwrite: entityOverwrite,
                     useAccessor: entityUseAccessor,
                     sql: entitySql)
    }
}