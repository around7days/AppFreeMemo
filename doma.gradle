/*
 * DB接続定義
 */
def genUrl                       = 'jdbc:mysql://localhost:3306/mmsdb'
def genUser                      = 'mms01'
def genPassword                  = 'mms01'
def genTableTypes                = 'TABLE'
def genTemplatePrimaryDir        = 'domaGenTemplates'
def genVersionColumnNamePattern  = 'version'

/*
 * 共通ソースコード自動生成
 */
task domaGen << {
    // entity
    def entityPackageName        = 'rms.com.doma.entity'
    def entityOverwrite          = true
    def entityOverwriteListener  = true
    def entityUseAccessor        = true
    // dao
    def daoPackageName           = 'rms.com.doma.dao'
    def daoOverwrite             = true
    // sql
    def SqlOverwrite             = true

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: genUrl,
            user: genUser,
            password: genPassword,
            tableTypes: genTableTypes,
            templatePrimaryDir: genTemplatePrimaryDir,
            versionColumnNamePattern: genVersionColumnNamePattern) {
        entityConfig(packageName: entityPackageName,
                     overwrite: entityOverwrite,
                     overwriteListener: entityOverwriteListener,
                     useAccessor: entityUseAccessor)
        daoConfig(packageName: daoPackageName, overwrite: daoOverwrite)
        sqlConfig(overwrite: SqlOverwrite)
    }
}

/*
 * 個別ソースコード自動生成
 */
task domaGenEntity << {
    def entityPackageName = 'src/main/java'
    def entityEntityName  = 'Example'
    def entityOverwrite   = true
    def entityUseAccessor = true
    def entitySql         =
'''
select
  R.applicant_id
  , (select U.user_nm from M_USER U where R.applicant_id = U.user_id) as applicant_nm
  , R.target_ym
  , left(R.target_ym, 4) as target_year
  , right(R.target_ym, 2) as target_month
  , R.applicant_date
  , R.status
  , (select C.code_nm from M_CODE C where C.code_kbn = 'A001' and R.status = C.code) as status_nm
  , R.approver1_id
  , (select U.user_nm from M_USER U where R.approver1_id = U.user_id) as approver1_nm
  , R.approver2_id
  , (select U.user_nm from M_USER U where R.approver2_id = U.user_id) as approver2_nm
  , R.approver3_id
  , (select U.user_nm from M_USER U where R.approver3_id = U.user_id) as approver3_nm
  , R.file_path
from
  t_report R
'''

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: genUrl,
            user: genUser,
            password: genPassword,
            tableTypes: genTableTypes,
            templatePrimaryDir: genTemplatePrimaryDir) {
        entityConfig(packageName: entityPackageName,
                     entityName: entityEntityName,
                     overwrite: entityOverwrite,
                     useAccessor: entityUseAccessor,
                     sql: sql)
    }
}