/*
 * DB接続定義
 */
def dbUrl       = 'jdbc:mysql://localhost:3306/mmsdb'
def dbUser      = 'mms01'
def dbPass      = 'mms01'
def tableTypes  = 'TABLE,VIEW'
def templateDir = 'domaGenTemplates'

/*
 * 共通ソースコード自動生成
 */
task domaGen << {
	def entityPkg         = 'mms.com.doma.entity'
	def daoPkg            = 'mms.com.doma.dao'
	def entityOverwrite   = true
	def entityUseAccessor = true
	def listenerOverwrite = true
	def DaoOverwrite      = true
	def SqlConfgOverwrite = true

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: dbUrl, user: dbUser, password: dbPass, tableTypes: tableTypes, templatePrimaryDir: templateDir) {
        entityConfig(packageName: entityPkg, overwrite: entityOverwrite, overwriteListener: listenerOverwrite, useAccessor: entityUseAccessor)
        daoConfig(packageName: daoPkg, overwrite: DaoOverwrite)
        sqlConfig(overwrite: SqlConfgOverwrite)
    }
}

/*
 * 個別ソースコード自動生成
 */
task domaGenEntity << {
	def entityPkg         = 'mms.uniq.tran.report.search'
	def entityNm          = 'SearchReportEntity'
	def entityOverwrite   = true
	def entityUseAccessor = true
	def sql               =
'''
SELECT
    A.applicant_id
  ,(select U.user_nm from m_user U where A.applicant_id = U.user_id) as applicant_nm
  , A.target_ym
  , '' as department
  , A.applicant_date
  , A.status
  ,(select A001.code_nm from m_code A001 where A001.code_kbn = 'A001' and A001.code = A.status)  as status_nm
  , A.approver1_id
  ,(select U.user_nm from m_user U where A.approver1_id = U.user_id) as approver1_nm
  , A.approver2_id
  ,(select U.user_nm from m_user U where A.approver2_id = U.user_id) as approver2_nm
  , A.approver3_id
  ,(select U.user_nm from m_user U where A.approver3_id = U.user_id) as approver3_nm
  , A.file_path
FROM
  t_report A
'''

    ant.taskdef(resource: 'domagentask.properties', classpath: configurations.domaGenRuntime.asPath)
    ant.gen(url: dbUrl, user: dbUser, password: dbPass, tableTypes: tableTypes, templatePrimaryDir: templateDir) {
        entityConfig(packageName: entityPkg, entityName: entityNm, overwrite: entityOverwrite, useAccessor: entityUseAccessor, sql: sql)
    }
}